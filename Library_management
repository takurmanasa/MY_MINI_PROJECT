#include <stdio.h>
#include <stdlib.h>
#include <string.h>

// Structure to store book details
struct Book {
    int id;
    char title[50];
    char author[50];
};

// Function to add a book
void addBook() {
    struct Book book;
    FILE *file = fopen("library.dat", "ab");

    printf("\nEnter Book ID: ");
    scanf("%d", &book.id);
    getchar(); // To consume the newline character
    printf("Enter Book Title: ");
    fgets(book.title, sizeof(book.title), stdin);
    strtok(book.title, "\n"); // Remove trailing newline
    printf("Enter Author Name: ");
    fgets(book.author, sizeof(book.author), stdin);
    strtok(book.author, "\n");

    fwrite(&book, sizeof(book), 1, file);
    fclose(file);
    printf("Book added successfully!\n");
}

// Function to display all books
void displayBooks() {
    struct Book book;
    FILE *file = fopen("library.dat", "rb");

    if (!file) {
        printf("No books found!\n");
        return;
    }

    printf("\nList of Books:\n");
    while (fread(&book, sizeof(book), 1, file)) {
        printf("ID: %d, Title: %s, Author: %s\n", book.id, book.title, book.author);
    }

    fclose(file);
}

// Function to search for a book by ID
void searchBook() {
    struct Book book;
    int searchId, found = 0;
    FILE *file = fopen("library.dat", "rb");

    if (!file) {
        printf("No books found!\n");
        return;
    }

    printf("\nEnter Book ID to search: ");
    scanf("%d", &searchId);

    while (fread(&book, sizeof(book), 1, file)) {
        if (book.id == searchId) {
            printf("Book Found: ID: %d, Title: %s, Author: %s\n", book.id, book.title, book.author);
            found = 1;
            break;
        }
    }

    if (!found) {
        printf("Book not found!\n");
    }

    fclose(file);
}

// Function to delete a book by ID
void deleteBook() {
    struct Book book;
    int deleteId, found = 0;
    FILE *file = fopen("library.dat", "rb");
    FILE *temp = fopen("temp.dat", "wb");

    if (!file) {
        printf("No books found!\n");
        return;
    }

    printf("\nEnter Book ID to delete: ");
    scanf("%d", &deleteId);

    while (fread(&book, sizeof(book), 1, file)) {
        if (book.id == deleteId) {
            printf("Book deleted successfully!\n");
            found = 1;
        } else {
            fwrite(&book, sizeof(book), 1, temp);
        }
    }

    fclose(file);
    fclose(temp);

    remove("library.dat");
    rename("temp.dat", "library.dat");

    if (!found) {
        printf("Book not found!\n");
    }
}

// Main function to display menu
int main() {
    int choice;
    
    do {
        printf("\n===== Library Management System =====\n");
        printf("1. Add Book\n");
        printf("2. Display Books\n");
        printf("3. Search Book\n");
        printf("4. Delete Book\n");
        printf("5. Exit\n");
        printf("Enter your choice: ");
        scanf("%d", &choice);
        getchar(); // To consume the newline character

        switch (choice) {
            case 1:
                addBook();
                break;
            case 2:
                displayBooks();
                break;
            case 3:
                searchBook();
                break;
            case 4:
                deleteBook();
                break;
            case 5:
                printf("Exiting the program...\n");
                break;
            default:
                printf("Invalid choice! Please try again.\n");
        }
    } while (choice != 5);

    return 0;
}
